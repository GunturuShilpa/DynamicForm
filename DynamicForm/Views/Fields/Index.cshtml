@model Core.Services.TemplateFields.Requests.FieldRequest

@{
    ViewBag.Title = "Index";
}

<style>
    .modal {
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }
</style>

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Fields</h2>
                <br />
                <div class="text-left">
                </div>
                <div input-group>
                    <input type="text" placeholder="Name">&nbsp;&nbsp;
                    <select name="Datatype" id="selecteddatatype" style="padding:3px;">
                        &nbsp;&nbsp;
                        <option value="Confirmed">Heading</option>
                        <option value="Cancelled">Text Box</option>
                    </select>
                    <button class="btn btn-group-sm btn-info">Search</button>
                    @*<button data-bs-toggle="modal" data-bs-target="#fieldCreate" class="btn btn-primary me-4" style="margin-left:30%;">Create</button>*@
                    <div class="pull-right">
                        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#fieldCreate">
                            <span class="glyphicon glyphicon-plus"></span> Create
                        </button>
                    </div>
                </div>
                <br />
                <br />
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div id="wait" class="loader" style="display:none;width:100px;height:100px;position:absolute;top:50%;left:50%;padding:2px;z-index:100000"></div>
                <table class="table table-striped table-bordered table-responsive" id="tbForm" style="width:100%">
                    <thead>
                        <tr class="bg-secondary">
                            <th style="min-width:100px">Serial Number</th>
                            <th style="min-width:30px">Name</th>
                            <th style="min-width:30px">DataType</th>
                            <th style="min-width:30px">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="tdField"></tbody>
                </table>
            </div>
        </div>

        <form id="createField" method="post" enctype="multipart/form-data" autocomplete="off">
            <div id="fieldCreate" class="modal fade" aria-hidden="true" data-backdrop="static" data-keyboard="false">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header bg-warning">
                            <h4 class="modal-title">New Field</h4>
                            <button type="button" class="close" data-dismiss="modal" id="modelclose">&times;</button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label class="required">Name</label>
                                <input id="FieldName" name="FieldName" type="text" class="form-control">
                                <span id="lblFieldName" style="display:none" class="text-danger">The Field Name field is required</span>
                                <div class="form-group">
                                    <label for="DataType" class="required">DataType</label>
                                    <select name="DataType" id="selecteddatatype" class="form-control">
                                        <option value="Confirmed">Heading</option>
                                        <option value="Cancelled">TextBox</option>
                                    </select>
                                    <span id="lblFieldDataType" style="display:none" class="text-danger">The Field DataType field is required</span>
                                </div>
                                <br />
                                <br />
                                <div class="text-left">
                                    <button class="btn btn-success " type="button" onclick="addField(event);" id="newfieldcreate"><i class="fa fa-check"></i>&nbsp;Add new Field</button>
                                    <button type="button" class="btn btn-danger" id="btnReset">Reset</button>
                                    <button type="button" class="btn btn-primary" data-dismiss="modal" id="btnClose">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        </form>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            bind();
            $("#modelclose").click(function () {
                $("#newfieldcreate").removeClass("disabled");
                $("#btnReset").removeClass("disabled");
                $("#btnClose").removeClass("disabled");
                ClearCreateField();
            });
            $('#btnReset,#btnClose').click(function () {
                ClearCreateField();
            });
        });
        function ClearCreateField() {

            $('#lblFieldName').hide();
            $('#lblFieldDataType').hide();

            $('#FieldName').val('');
            $('#selecteddatatype').val('');
        }

        function bind() {
            debugger;
            try {
                var oTable;
                var dvHt = screen.height - 380;
                /* Add the events etc before DataTables hides a column */
                $("thead input").keyup(function () {
                    /* Filter on the column (the index) of this element */
                    oTable.fnFilter(this.value, oTable.oApi._fnVisibleToColumnIndex(
                        oTable.fnSettings(), $("thead input").index(this)));
                });

                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetAllFields", "Fields")',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data, status, jqXHR) {
                        console.log(data);
                        if (data.length > 0) {
                            $.each(data, function (index, item) {

                                var Row = 0;
                                oTable = $('#tbFields').dataTable({
                                    "bPaginate": true,
                                    "searching": true,
                                    "destroy": true,
                                    "autoWidth": false,
                                    "scrollX": true,
                                    "pageLength": 10,
                                    "pagingType": "full_numbers",
                                    "lengthMenu": [[05, 10], [05, 10]],
                                    "iDisplayLength": 10,
                                    "order": [],
                                    "aaData": data,
                                    "language": {
                                        "searchPlaceholder": "Search",
                                        "search": "",
                                        "sEmptyTable": "No Data Available"
                                    },
                                    "responsive": true,
                                    "aoColumns": [
                                        {
                                            mData: null,
                                            render: function (item, type, row) {

                                                if (item.Id != null && item.Id != "" && item.Id != undefined) {
                                                    return item.Id;
                                                } else {
                                                    return "N/A";
                                                }
                                            }
                                        },
                                        {
                                            mData: null,
                                            render: function (item, type, row) {

                                                if (item.Name != null && item.Name != "" && item.Name != undefined) {
                                                    return item.Name;
                                                } else {
                                                    return "N/A";
                                                }
                                            }
                                        },
                                        {
                                            mData: null,
                                            render: function (item, type, row) {

                                                if (item.DataType != null && item.DataType != "" && item.DataType != undefined) {
                                                    return item.DataType;
                                                } else {
                                                    return "N/A";
                                                }
                                            }
                                        },

                                        {
                                            mData: null,
                                            render: function (item, type, row) {
                                                return '<button type="submit"  onclick="showDiv(' + item.Id + ');" class="btn btn-info btn-xs"> <i class="fa fa-pencil">Properties</i></button>';

                                            }
                                        }
                                    ]
                                });
                            })
                        }
                        else {
                            $("#tdField").html('<tr><td colspan="10" style="text-align:center">No Fields Available</td></tr>');
                        }
                    },

                    error: function (xhr) {
                    }
                });
                $('a.toggle-vis').on('click', function (e) {
                    e.preventDefault();

                    // Get the column API object
                    var column = oTable.column($(this).attr('data-column'));

                    // Toggle the visibility
                    column.visible(!column.visible());
                });
                //oTable.columns.adjust().draw();
            }
            catch (ex) {
                //  CaptureLogForJquery(ex.message, ex.stack, 'Bind()');
            }
        }
        function validateCreateField() {
            createFlag = false;
            var cFieldName = $('#FieldName').val();

            if (cFieldName == null || cFieldName == "" || cFieldName == undefined) {
                $('#lblFiledName').show();
                createFlag = true;
            }
            else {
                $('#lblFieldName').hide();
            }

            function addField(event) {

                var formData = new FormData();
                formData.append('Name', $('#FieldName').val());
                formData.append('DataType', $('#selecteddatatype').val());

                try {
                    $.ajax({
                        url: '@Url.Action("Create", "Fields")',
                        enctype: 'multipart/form-data',
                        type: 'POST',
                        cache: false,
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (response) {
                            alert("New Field created");

                            $('#FieldName').val();
                            $('#selecteddatatype').val();
                            $('#createField').modal('hide');
                            location.reload(true);
                        },
                        error: function (error) { alert(error); },
                    });
                } catch (ex) {
                    alert('Something went wrong!');
                }

    </script>
}
