@model Core.Services.Form.Requests.FormRequest

@{
    ViewBag.Title = "Form";
}

<style>
    .modal {
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }
</style>

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Home - Form</h2>
                <br />
                <div input-group>
                    <input type="text" placeholder="Name">&nbsp;&nbsp;
                    <input type="text" placeholder="Description">&nbsp;&nbsp;
                    <input type="number" placeholder="Ordinal" />&nbsp;&nbsp;
                    <select name="Status" id="selectedstatus" style="padding:3px;">
                        &nbsp;&nbsp;
                        <option value="Confirmed">Active</option>
                        <option value="Cancelled">Inactive</option>
                    </select>
                    <button class="btn btn-group-sm btn-info">Search</button>
                    <div class="pull-right">
                        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#myModal">
                            <span class="glyphicon glyphicon-plus"></span> Create
                        </button>
                    </div>
                </div>
                <br />

                <div class="clearfix"></div>
            </div>
            <br />
            <br />
            <div class="x_content">
                <div id="wait" class="loader" style="display:none;width:100px;height:100px;position:absolute;top:50%;left:50%;padding:2px;z-index:100000"></div>
                <table class="table table-striped table-bordered table-responsive" id="tbForm" style="width:100%">
                    <thead>
                        <tr class="bg-secondary">
                            <th style="min-width:100px">Serial Number</th>
                            <th style="min-width:30px">Name</th>
                            <th style="min-width:30px">Description</th>
                            <th style="min-width:30px">Status</th>
                            <th style="min-width:30px">Ordinal</th>
                            <th style="min-width:30px">Actions</th>
                            <th style="min-width:30px">Fields</th>
                            <th style="min-width:30px">Apply</th>
                            <th style="min-width:30px">Submissions</th>
                        </tr>
                    </thead>
                    <tbody id="tdForm"></tbody>
                </table>
            </div>
        </div>
        <form id="createForm" method="post" enctype="multipart/form-data" autocomplete="off" asp-controller="Forms" asp-action="SaveForm" method="post">
            <!-- Modal -->
            <div class="modal fade" id="myModal" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
                <div class="modal-dialog">
                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header bg-warning">
                            <h4 class="modal-title">New Form</h4>
                            <button type="button" class="close" data-dismiss="modal" id="modelclose">&times;</button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label class="required" for="FormName">Name</label>
                                <input type="text" id="FormName" class="form-control" asp-for="Name" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label class="required" for="FormDescription">Description</label>
                                <input type="text" id="FormDescription" class="form-control" asp-for="Description" />
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label class="required" for="FormOrdinal">Ordinal</label>
                                <input type="number" id="FormOrdinal" class="form-control" asp-for="Ordinal" />
                                <span asp-validation-for="Ordinal" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="FormStatus" class="required">Status</label>
                                <select name="FormStatus" id="selectedstatus" class="form-control" asp-for="Status">
                                    <option value="1">Active</option>
                                    <option value="0">Inactive</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-success " type="submit"><span class="glyphicon glyphicon-floppy-saved"></span> Create</button>
                            <button type="button" class="btn btn-danger" data-dismiss="modal"> <span class="glyphicon glyphicon-remove"></span> Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        bind();
        $("#modelclose").click(function () {
            $("#newformcreate").removeClass("disabled");
            $("#btnReset").removeClass("disabled");
            $("#btnClose").removeClass("disabled");
            ClearCreateForm();
        });
        $('#btnReset,#btnClose').click(function () {
            ClearCreateForm();
        });
    });
    function ClearCreateForm() {

        $('#lblFormName').hide();
        $('#lblFormDescription').hide();
        $('#lblFormOrdinal').hide();
        $('#lblFormStatus').hide();

        $('#FormName').val('');
        $('#FormDescription').val('');
        $('#FormOrdinal').val('');
        $('#selectedstatus').val('');

    }

    function bind() {
        debugger;
        try {
            var oTable;
            var dvHt = screen.height - 380;
            /* Add the events etc before DataTables hides a column */
            $("thead input").keyup(function () {
                /* Filter on the column (the index) of this element */
                oTable.fnFilter(this.value, oTable.oApi._fnVisibleToColumnIndex(
                    oTable.fnSettings(), $("thead input").index(this)));
            });

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAllForms", "Forms")',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data, status, jqXHR) {
                    console.log(data);
                    if (data.length > 0) {
                        $.each(data, function (index, item) {

                            var Row = 0;
                            oTable = $('#tbForm').dataTable({
                                "bPaginate": true,
                                "searching": true,
                                "destroy": true,
                                "autoWidth": false,
                                "scrollX": true,
                                "pageLength": 10,
                                "pagingType": "full_numbers",
                                "lengthMenu": [[05, 10], [05, 10]],
                                "iDisplayLength": 10,
                                "order": [],
                                "aaData": data,
                                "language": {
                                    "searchPlaceholder": "Search",
                                    "search": "",
                                    "sEmptyTable": "No Data Available"
                                },
                                "responsive": true,
                                "aoColumns": [
                                    {
                                        mData: null,
                                        render: function (item, type, row) {

                                            if (item.Id != null && item.Id != "" && item.Id != undefined) {
                                                return item.Id;
                                            } else {
                                                return "N/A";
                                            }
                                        }
                                    },
                                    {
                                        mData: null,
                                        render: function (item, type, row) {

                                            if (item.Name != null && item.Name != "" && item.Name != undefined) {
                                                return item.Name;
                                            } else {
                                                return "N/A";
                                            }
                                        }
                                    },
                                    {
                                        mData: null,
                                        render: function (item, type, row) {

                                            if (item.Description != null && item.Description != "" && item.Description != undefined) {
                                                return item.Description;
                                            } else {
                                                return "N/A";
                                            }
                                        }
                                    },
                                    {
                                        mData: null,
                                        render: function (item, type, row) {

                                            if (item.Status != null && item.Status != "" && item.Status != undefined) {
                                                return item.Status;
                                            } else {
                                                return "N/A";
                                            }
                                        }
                                    },
                                    {
                                        mData: null,
                                        render: function (item, type, row) {

                                            if (item.Ordinal != null && item.Ordinal != "" && item.Ordinal != undefined) {
                                                return item.Ordinal;
                                            } else {
                                                return "N/A";
                                            }
                                        }
                                    },
                                    {
                                        mData: null,
                                        render: function (item, type, row) {
                                            return '<button type="submit"  onclick="showDiv(' + item.Id + ');" class="btn btn-info btn-xs"> <i class="fa fa-pencil"></i></button>';

                                        }
                                    }
                                ]
                            });
                        })
                    }
                    else {
                        $("#tdForm").html('<tr><td colspan="10" style="text-align:center">No Forms Available</td></tr>');
                    }
                },

                error: function (xhr) {
                }
            });
            $('a.toggle-vis').on('click', function (e) {
                e.preventDefault();

                // Get the column API object
                var column = oTable.column($(this).attr('data-column'));

                // Toggle the visibility
                column.visible(!column.visible());
            });
            //oTable.columns.adjust().draw();
        }
        catch (ex) {
            //  CaptureLogForJquery(ex.message, ex.stack, 'Bind()');
        }
    }
    function validateCreateForm() {
        createFlag = false;
        var cFormName = $('#FormName').val();

        if (cFormName == null || cFormName == "" || cFormName == undefined) {
            $('#lblFormName').show();
            createFlag = true;
        }
        else {
            $('#lblFormName').hide();
        }

        var cFormDescription = $('#cFormDescription').val();

        if (cFormDescription == null || cFormDescription == "" || cFormDescription == undefined) {
            $('#lblcFormDescription').show();
            createFlag = true;
        }
        else {
            $('#lblcFormDescription').hide();
        }

        var FormOrdinal = $('#FormOrdinal').val();

        if (FormOrdinal == null || FormOrdinal == "" || FormOrdinal == undefined) {
            $('#lblFormOrdinal').show();
            createFlag = true;
        }
        else {
            $('#lblFormOrdinal').hide();
        }

        return createFlag;
    }

    function addForm(event) {
        debugger;
        var cFormName = $('#FormName').val();
        var cFormDescription = $('#FormDescription').val();
        var cFormOrdinal = $('#FormOrdinal').val();
        var cFormStatus = $('#selectedstatus').val();


</script>
